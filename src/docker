System: ubutu 16.04 LTS

1.Install docker
	-curl -sSL https://get.docker.com |wget or sh -q0- https://get.docker.com |sh 
2.Don't use root user but add user to group
	sudo usermod -aG devops
3.Check docker version
	-docker version
4.Check if docker installed correctly
	-docker run debian echo"Hello docker"
5.To use shell inside a container
	-docker run -i -t debian /bin/bash
5.Change hostname
 	-docker run -h CONTAINER -i -t debian /bin/bash
6. To see all the running container
	-docker ps
7.More info on container
	docker inspect naughty_bhabha
8.Filter information
	docker insepect naughty_bhabha |grep IPAddress
9.List changes in the container
	-docker diff naughty_bhabha
10. Container logs
	-docker logs naughty_bhabha
11.Remove container
	docker rm naughty_bhabha
12.Build Container
	-docker run -it --name cowsay --hostname cowsay debian bash
13.Turn it into image
	-docker commit cowsay test/cowsayimage(containername repositoryname/imagename
14.Creating image from dockerfile
	-create a folder
	-create a docker file with name Dockerfile and specify base image(debian:version) ,RUN command to install
	-docker build -t test/cowsay-dockerfile .
15.create an account at docker hub
	-go to docker hub and register
16.Login to dockerhub
	-docker login
	-provide username
	-provide password
17.Push the image to docker hub
	-docker push crazdrms/cowsay
18.Use official container
	- docker pull redis
19.Start up redis
	-docker run --name myredis -d redis #-d indicates run redis in background
20. Run redis cli
	-docker run --rm -it --link myredis:redis redis /bin/bash
	-redis-cli -h redis -p 6379
21.Build with no cache
	- docker build container_id --no-cache
22. Connecting containers to the world
	- docker run -d -p 8000:80 nginx #-d run in background detached, -p specifies port
21.Build with no cache
	- docker build container_id --no-cache
22. Connecting containers to the world
	- docker run -d -p 8000:80 nginx #-d run in background detached, -p specifies port
23. Stopping,removing,mounting current container
	- docker stop $(docker ps -lq)
	- docker rm $(docker ps -lq)
	-docker run -d -p 5000:5000 -v "$PWD" /app:/app identidock
24.Install docker-compose
	-sudo curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
25.Apply executable permission to binary
	-sudo chmod +x /usr/local/bin/docker-compose
26.Check docker-compose version
	-docker-compose --version
--------------------------------------------------------------------------
docker setup in ubuntu 17.10
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu zesty stable"

sudo apt-get update
sudo apt-get install docker-ce